[要求]
给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。

[提高]
你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？

[等级]
简单

[接口]
int SingleNumber(vector<int>& nums)

[示例]
Input = 2,2,1
Output = 1

[要求]
给定一种规律pattern和一个字符串str，判断str是否遵循相同的规律。
这里的遵循指完全匹配，例如：pattern 里的每个字母和字符串 str 中的每个非空单词之间存在着双向连接的对应规律。

[等级]
简单

[接口]
bool WordPattern(string pattern, string str)

[示例]
Pattern = "abba"
Str = "dog cat cat dog"
Output = true

Pattern = "abba"
Str = "dog cat cat fish"
Output = false